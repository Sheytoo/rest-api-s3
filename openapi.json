{
  "openapi": "3.0.1",
  "info": {
    "title": "API WEB S3",
    "description": "API for semester 3 web project in IUT of Belfort-Montb√©liard",
    "contact": {
      "name": "Nathan BLIND HEITZ"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/Sheytoo/rest-api-s3/blob/master/LICENSE"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Source code of API (Github)",
    "url": "https://github.com/Sheytoo/rest-api-s3"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "customers",
      "description": "All requests concerning customers"
    },
    {
      "name": "employees",
      "description": "All requests concerning employees"
    },
    {
      "name": "offices",
      "description": "All requests concerning offices"
    },
    {
      "name": "orders",
      "description": "All requests concerning orders"
    },
    {
      "name": "payments",
      "description": "All requests concerning payments"
    },
    {
      "name": "products",
      "description": "All requests concerning products"
    }
  ],
  "paths": {
    "/customers": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Find all customers",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      },
      "post": {
        "tags": [
          "customers"
        ],
        "summary": "Create a new customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation"
          },
          "400": {
            "description": "Missing required parameters"
          },
          "500": {
            "description": "Unable to insert data"
          }
        }
      }
    },
    "/customers/count": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Get count of all customers",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Find customer by ID",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      },
      "patch": {
        "tags": [
          "customers"
        ],
        "summary": "Update customer's data by ID",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Missing parameters"
          },
          "404": {
            "description": "Customer not found"
          },
          "500": {
            "description": "Unable to update data"
          }
        }
      },
      "delete": {
        "tags": [
          "customers"
        ],
        "summary": "Delete a customer by ID",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Customer not found"
          },
          "500": {
            "description": "Unable to delete data"
          }
        }
      }
    },
    "/customers/{customerId}/last-order": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Get last order of a customer by ID",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Data not found"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/customers/without-payments/year/{year}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Find customers without payments for a year",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/employees": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Find all employees",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/employees/{employeeId}": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Find employee by ID",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Employee not found"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/employees/{employeeId}/customers": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Find all customers for a employee by ID",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Employee not found"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/employees/{employeeId}/employees": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Find all employees for a employee by ID",
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Employee not found"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/employees/two-with-most/customers": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Find 2 employees with most customers",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/employees/two-with-most/consumer-customers": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Find 2 employees with most consumer customers",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/offices": {
      "get": {
        "tags": [
          "offices"
        ],
        "summary": "Find all offices",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      },
      "post": {
        "tags": [
          "offices"
        ],
        "summary": "Create a new office",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Office"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation"
          },
          "400": {
            "description": "Missing required parameters"
          },
          "500": {
            "description": "Unable to insert data"
          }
        }
      }
    },
    "/offices/count": {
      "get": {
        "tags": [
          "offices"
        ],
        "summary": "Get count of all offices",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/offices/{officeId}": {
      "patch": {
        "tags": [
          "offices"
        ],
        "summary": "Update office's data by ID",
        "parameters": [
          {
            "name": "officeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Office"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Missing parameters"
          },
          "404": {
            "description": "Office not found"
          },
          "500": {
            "description": "Unable to update data"
          }
        }
      },
      "delete": {
        "tags": [
          "offices"
        ],
        "summary": "Delete a office by ID",
        "parameters": [
          {
            "name": "officeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Office not found"
          },
          "500": {
            "description": "Unable to delete data"
          }
        }
      }
    },
    "/offices/{officeId}/employees": {
      "get": {
        "tags": [
          "offices"
        ],
        "summary": "Find all employees of office by ID",
        "parameters": [
          {
            "name": "officeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Office not found"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/orders/{orderId}/products": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Find all products of order by ID",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/orders/{orderId}/products/{productId}": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Add a product in a order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantityOrdered": {
                    "type": "integer",
                    "example": "10",
                    "required": true
                  },
                  "priceEach": {
                    "type": "number",
                    "example": "5.95",
                    "required": true
                  },
                  "orderLineNumber": {
                    "type": "integer",
                    "example": "3",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation"
          },
          "400": {
            "description": "Missing required parameters"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "summary": "Delete a product from a order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Unable to delete data"
          }
        }
      }
    },
    "/orders/{orderId}/products/{productId}/quantity": {
      "patch": {
        "tags": [
          "orders"
        ],
        "summary": "Update quantity of product in order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantityOrdered": {
                    "type": "integer",
                    "example": "10",
                    "required": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Missing required parameters"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/orders/customers/{customerId}/insert-products": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create order for customer with products",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order": {
                    "type": "object",
                    "properties": {
                      "orderNumber": {
                        "type": "integer",
                        "example": "1112",
                        "required": true
                      },
                      "orderDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-10-02",
                        "required": true
                      },
                      "requiredDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-11-03",
                        "required": true
                      },
                      "status": {
                        "type": "string",
                        "example": "Shipped",
                        "required": true
                      }
                    }
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productCode": {
                          "type": "string",
                          "required": true
                        },
                        "quantityOrdered": {
                          "type": "integer",
                          "required": true
                        },
                        "priceEach": {
                          "type": "number",
                          "required": true
                        },
                        "orderLineNumber": {
                          "type": "integer",
                          "required": true
                        }
                      }
                    },
                    "example": [
                      {
                        "productCode": "S10_1678",
                        "quantityOrdered": 10,
                        "priceEach": 5.95,
                        "orderLineNumber": 3
                      },
                      {
                        "productCode": "S10_1949",
                        "quantityOrdered": 5,
                        "priceEach": 59.99,
                        "orderLineNumber": 2
                      }
                    ],
                    "uniqueItems": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to create and/or insert data"
          }
        }
      }
    },
    "/payments/year/{year}/best-month": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get best profitable month of a year",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/payments/date/{date}": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Find all payments for a date",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/payments/betwee-year/{firstYear}/{secondYear}": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Find all payments between two years",
        "parameters": [
          {
            "name": "firstYear",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "secondYear",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/payments/year/{year}/between-monts/{firstMonth}/{secondMonth}": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Find all payments of year between two months",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "firstMonth",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "secondMonth",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Create a product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation"
          },
          "400": {
            "description": "Missing required parameters"
          },
          "500": {
            "description": "Unable to insert data"
          }
        }
      }
    },
    "/products/{productId}": {
      "patch": {
        "tags": [
          "products"
        ],
        "summary": "Update data of a product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Missing parameters"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Unable to insert data"
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete a product",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Unable to insert data"
          }
        }
      }
    },
    "/products/lines": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Find all product lines",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/products/three-first-products-ordered/by-count": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get three first products ordered by order count",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/products/three-first-products-ordered/by-income": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get three first products ordered by income",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    },
    "/products/sold-year/{soldYear}/not-sold-year/{notSoldYear}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Find products sold for one year but not for another year",
        "parameters": [
          {
            "name": "soldYear",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "notSoldYear",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unable to fetch data"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Customer": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "integer",
            "example": "Apple",
            "required": true
          },
          "contactLastName": {
            "type": "string",
            "example": "Cook",
            "required": true
          },
          "contactFirstName": {
            "type": "string",
            "example": "Tim",
            "required": true
          },
          "phone": {
            "type": "string",
            "example": "555-06559",
            "required": true
          },
          "addressLine1": {
            "type": "string",
            "example": "9 Kennedy Street",
            "required": true
          },
          "addressLine2": {
            "type": "string",
            "example": "Level 4",
            "required": false
          },
          "city": {
            "type": "string",
            "example": "Los Angeles",
            "required": true
          },
          "state": {
            "type": "string",
            "example": "California",
            "required": false
          },
          "postalCode": {
            "type": "string",
            "example": "90011",
            "required": false
          },
          "country": {
            "type": "string",
            "example": "USA",
            "required": true
          },
          "salesRepEmployeeNumber ": {
            "type": "integer",
            "example": "1002",
            "required": false
          },
          "creditLimit ": {
            "type": "number",
            "example": "40.6",
            "required": false
          }
        }
      },
      "Office": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "example": "Idianapolis",
            "required": true
          },
          "phone": {
            "type": "string",
            "example": "555-07895",
            "required": true
          },
          "addressLine1": {
            "type": "string",
            "example": "56 John Avenue",
            "required": true
          },
          "addressLine2": {
            "type": "string",
            "example": "Floor 18",
            "required": false
          },
          "state": {
            "type": "string",
            "example": "Indiana",
            "required": false
          },
          "country": {
            "type": "string",
            "example": "USA",
            "required": true
          },
          "postalCode": {
            "type": "string",
            "example": "46041",
            "required": true
          },
          "territory": {
            "type": "string",
            "example": "EMEA",
            "required": true
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "example": "S18_745",
            "required": true
          },
          "productName": {
            "type": "string",
            "example": "productName",
            "required": true
          },
          "productScale": {
            "type": "string",
            "example": "1:18",
            "required": true
          },
          "productVendor": {
            "type": "string",
            "example": "Second Gear Diecast",
            "required": true
          },
          "productDescription": {
            "type": "string",
            "example": "This is the best replica in the world!",
            "required": true
          },
          "quantityInStock": {
            "type": "integer",
            "example": "6",
            "required": true
          },
          "buyPrice": {
            "type": "number",
            "example": "49.99",
            "required": true
          },
          "MSRP": {
            "type": "number",
            "example": "118.94",
            "required": true
          }
        }
      }
    }
  }
}